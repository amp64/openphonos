<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:asyncImageLoader="clr-namespace:AsyncImageLoader;assembly=AsyncImageLoader.Avalonia"
			 xmlns:ic="using:FluentIcons.Avalonia.MarkupExtensions"
			 xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"			 
			 xmlns:icustom="clr-namespace:Avalonia.Xaml.Interactions.Custom;assembly=Avalonia.Xaml.Interactions"
			 xmlns:OpenPhonos="clr-namespace:OpenPhonos.Sonos;assembly=OpenPhonos.Sonos"
			 xmlns:local="clr-namespace:PhonosAvalon.Views;assembly=PhonosAvalon"
			 xmlns:clr="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             xmlns:vm="clr-namespace:PhonosAvalon.ViewModels"
			 x:DataType="vm:GroupViewModel"
			 x:CompileBindings="True"
             x:Class="PhonosAvalon.Views.MusicPickerView">
	<UserControl.Styles>
		<Style Selector="TextBlock.Line0">
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="FontWeight" Value="DemiBold"/>
		</Style>

		<Style Selector="ListBoxItem">
			<Setter Property="Padding" Value="4" />
		</Style>

	</UserControl.Styles>

	<UserControl.Resources>
		<x:Double x:Key="GridItemWidth">160</x:Double>
		<x:Double x:Key="GridItemHeight">192</x:Double>
		<GridLength x:Key="GridItemArtHeight">160</GridLength>
		<GridLength x:Key="GridItemTextHeight">32</GridLength>
		<clr:String x:Key="DefaultArt">avares://PhonosAvalon/Assets/NowPlaying/defaultartwork.png</clr:String>

		<local:ViewTypeConverter x:Key="ViewTypeConverter"/>
		<local:SafeGetItemConverter x:Key="SafeGetItemConverter"/>
		<local:StringSameConverter x:Key="StringSameConverter" DefaultValue="albumArtUri"/>

		<!-- This is used in the default list view -->
		<DataTemplate x:Key="MusicItemListTemplate" DataType="{x:Type OpenPhonos:MusicItem}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="32"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="32"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="32"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>

				<StackPanel Orientation="Vertical" Grid.Column="1" Grid.ColumnSpan="1" Margin="4,0,0,0" VerticalAlignment="Center">
					<TextBlock Text="{Binding Line0}" HorizontalAlignment="Left" Classes="Line0"/>
					<TextBlock Text="{Binding Line1}" HorizontalAlignment="Left" IsVisible="{Binding Line1, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"/>
				</StackPanel>
				<Image Grid.Column="0" Grid.RowSpan="1" Margin="2"
					   IsVisible="{Binding ParentDisplayData.ItemThumbnails, Converter={StaticResource StringSameConverter}, 
						ConverterParameter=albumArtUri, TargetNullValue=True, FallbackValue=True}"
					   asyncImageLoader:ImageLoader.Source="{Binding ArtUriAsync^, TargetNullValue={StaticResource DefaultArt}}"
					   Stretch="UniformToFill"
							/>
				<TextBlock Grid.Column="0" Grid.RowSpan="1"
					   IsVisible="{Binding ParentDisplayData.ItemThumbnails, Converter={StaticResource StringSameConverter},
						   ConverterParameter=trackNumber, TargetNullValue=False, FallbackValue=False}"
						   Text="{Binding TrackNumber}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
				<TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
						   Text="{Binding Line2}" HorizontalAlignment="Left" MaxLines="2"
						   IsVisible="{Binding Line2, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"/>
				<Button Grid.Column="2" Content="{ic:SymbolIcon Symbol=MoreHorizontal}" 
						Classes="IconStyle"
						Tapped="PlayButton_Clicked" 
						IsVisible="{Binding IsPlayable}">
					<Button.ContextMenu>
						<ContextMenu/>
					</Button.ContextMenu>
				</Button>

			</Grid>
		</DataTemplate>

	</UserControl.Resources>
	
	<Grid DataContext="{Binding MusicSource}">
		<Grid.RowDefinitions>
			<RowDefinition Height="32"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

		<Grid ColumnDefinitions="Auto,*,Auto,Auto">
			<TextBlock Grid.Column="1" Text="{Binding Heading}" Classes="Line0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
			<Button Grid.Column="0" 
					Content="{ic:SymbolIcon Symbol=ArrowLeft}" 
					Classes="IconStyle"
					Width="32" 
					Command="{Binding BackCommand}"/>
			<Button Grid.Column="3" 
					Content="{ic:SymbolIcon Symbol=Home}" 
					Classes="IconStyle"
					Width="32" 
					Command="{Binding HomeCommand}"/>
			<Button Grid.Column="2" 
					Content="{ic:SymbolIcon Symbol=Search}" 
					Classes="IconStyle"
					Width="32" 
					Command="{Binding SearchToggleCommand}"
					IsVisible="{Binding CanSearch, TargetNullValue=False, FallbackValue=False}"/>
		</Grid>

		<ProgressBar Grid.Row="1" IsIndeterminate="True" IsVisible="{Binding Busy}"/>
		<TextBlock Grid.Row="1" Text="{Binding ParentItem.Item.DisplayData}" IsVisible="False"/>

		<Grid Grid.Row="2" IsVisible="{Binding ParentItem.HeaderVisibility, FallbackValue=False, TargetNullValue=False}" 
			  ColumnDefinitions="100,*" RowDefinitions="100,Auto">
			<Image asyncImageLoader:ImageLoader.Source="{Binding ParentItem.Item.ArtUriAsync^, TargetNullValue={StaticResource DefaultArt}}" Stretch="Uniform"/>
			<StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center" Margin="8,0,0,0">
				<TextBlock Text="{Binding ParentItem.Header0}" Classes="Line0" TextWrapping="Wrap"/>
				<TextBlock Text="{Binding ParentItem.Header1}" TextWrapping="Wrap"/>
			</StackPanel>
			<TextBlock Grid.Row="1" Grid.ColumnSpan="2" Text="{Binding ParentItem.Header2}"
					   IsVisible="{Binding ParentItem.Header2, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
					   TextWrapping="Wrap" MaxLines="3"/>
		</Grid>

		<Grid Grid.Row="3" IsVisible="{Binding ParentItem.CanPlayShuffle, FallbackValue=False, TargetNullValue=False}" 
			  ColumnDefinitions="100,100">
			<Button Grid.Column="0" Content="{ic:SymbolIcon Symbol=Play}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
					Command="{Binding PlayCommand}" CommandParameter="{Binding ParentItem.Item}"/>
			<Button Grid.Column="1" Content="{ic:SymbolIcon Symbol=ArrowShuffle}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
					Command="{Binding ShuffleCommand}" CommandParameter="{Binding ParentItem.Item}"/>
		</Grid>

		<Grid Grid.Row="4" IsVisible="{Binding SearchControlVisible, TargetNullValue=False, FallbackValue=False}">
			<Grid ColumnDefinitions="*,Auto">
				<!-- needs FocusOnAttachedToVisualTreeBehavior -->
				<TextBox x:Name="SearchTextBox" Watermark="Search" TextWrapping="NoWrap"
						 Classes="clearButton"
						 Focusable="True" KeyUp="SearchTextBox_KeyUp">
					<!-- i:InteractionBehaviors>
						<icustom:FocusOnAttachedToVisualTreeBehavior/>
					</i:InteractionBehaviors-->
				</TextBox>
				<Button Grid.Column="1" Content="{ic:SymbolIcon Symbol=Search}"
						Classes="IconStyle"
						Tapped="SearchTextBox_Search"/>
			</Grid>
		</Grid>
		
		<Grid Grid.Row="5">
			<ListBox ItemsSource="{Binding Items}"
					 IsVisible="{Binding ViewType, Converter={StaticResource ViewTypeConverter}, ConverterParameter=Default}" 
					 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
					 SelectionChanged="OnSelectionChanged"
					 ItemTemplate="{StaticResource MusicItemListTemplate}">
			</ListBox>
			<ListBox ItemsSource="{Binding Items}"
					 IsVisible="{Binding ViewType, Converter={StaticResource ViewTypeConverter}, ConverterParameter=Grid}" 
					 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
					 ScrollViewer.VerticalScrollBarVisibility="Auto"
					 SelectionChanged="OnSelectionChanged"
					 >
				<ListBox.ItemsPanel>
					<ItemsPanelTemplate>
						<WrapPanel SizeChanged="WrapPanel_SizeChanged"/>
					</ItemsPanelTemplate>
				</ListBox.ItemsPanel>
				<ListBox.DataTemplates>
					<local:MusicTemplateSelector>
						<DataTemplate x:Key="Default" DataType="{x:Type OpenPhonos:MusicItem}">
							<Grid Height="{DynamicResource GridItemHeight}" Width="{DynamicResource GridItemWidth}">
								<Grid.RowDefinitions>
									<RowDefinition Height="{DynamicResource GridItemArtHeight}"/>
									<RowDefinition Height="*"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>
								<Image asyncImageLoader:ImageLoader.Source="{Binding ArtUri, TargetNullValue={StaticResource DefaultArt}}"
										Margin="-4"
										Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Top"/>
								<TextBlock Grid.Row="1" Text="{Binding Line0}" Classes="Line0" FontSize="12" HorizontalAlignment="Left" TextTrimming="CharacterEllipsis"/>
								<TextBlock Grid.Row="2" Text="{Binding Line1}" FontSize="10" HorizontalAlignment="Left" TextTrimming="CharacterEllipsis"
											IsVisible="{Binding Line1, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"/>
							</Grid>
						</DataTemplate>

						<DataTemplate x:Key="Mixed" DataType="{x:Type OpenPhonos:MusicItem}">
							<Grid Height="{DynamicResource GridItemHeight}" Width="{DynamicResource GridItemWidth}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="*"/>
									<RowDefinition Height="*"/>
									<RowDefinition Height="{StaticResource GridItemTextHeight}"/>
								</Grid.RowDefinitions>

								<TextBlock Grid.ColumnSpan="2" Grid.Row="2" Text="{Binding Line0}" Classes="Line0" MaxLines="1" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
								<Image asyncImageLoader:ImageLoader.Source="{Binding InlineChildren, Converter={StaticResource SafeGetItemConverter}, ConverterParameter=0, TargetNullValue={StaticResource DefaultArt}}"
									   Stretch="Uniform"/>
								<Image Grid.Column="1"
									   asyncImageLoader:ImageLoader.Source="{Binding InlineChildren, Converter={StaticResource SafeGetItemConverter}, ConverterParameter=1, TargetNullValue={StaticResource DefaultArt}}"
									   Stretch="Uniform"/>
								<Image Grid.Row="1"
									   asyncImageLoader:ImageLoader.Source="{Binding InlineChildren, Converter={StaticResource SafeGetItemConverter}, ConverterParameter=2, TargetNullValue={StaticResource DefaultArt}}"
									   Stretch="Uniform"/>
								<Image Grid.Column="1" Grid.Row="1"
									   asyncImageLoader:ImageLoader.Source="{Binding InlineChildren, Converter={StaticResource SafeGetItemConverter}, ConverterParameter=3, TargetNullValue={StaticResource DefaultArt}}"
									   Stretch="Uniform"/>
							</Grid>
						</DataTemplate>
					</local:MusicTemplateSelector>
				</ListBox.DataTemplates>
			</ListBox>		
		</Grid>
	</Grid>
</UserControl>
